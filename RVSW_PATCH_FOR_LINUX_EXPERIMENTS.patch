diff --git a/sbi/ogsbi/jump2linux.S b/sbi/ogsbi/jump2linux.S
index 5a22915..875f583 100644
--- a/sbi/ogsbi/jump2linux.S
+++ b/sbi/ogsbi/jump2linux.S
@@ -21,6 +21,7 @@ jump2linux:#Arguments: a0 = hart ID, a1 = address of device tree blob, a2 = addr
     #Set mstatus so that when we execute mret, we will go to S-Mode
     li t0, 0b00000000000000000001100000000000
     li t1, 0b00000000000000000000100000000000
+    #li t1, 0b00000000000000000001100000000000#MODIFIED FOR TESTING TO STAY IN M MODE
     csrc mstatus, t0#Clear MPP
     csrs mstatus, t1#Set MPP to 0b01 (S-Mode)
 
@@ -68,3 +69,122 @@ jump2linux:#Arguments: a0 = hart ID, a1 = address of device tree blob, a2 = addr
 
     #We should never return. Leave this as a sanity check so we exit if we do.
     RVSW_EXIT_ASM
+
+.align 8 #DO NOT REMOVE THIS ALIGNMENT
+/* autogenerated by dtc, do not edit */
+
+        .globl  dt_blob_start
+dt_blob_start:
+_dt_blob_start:
+        .globl  dt_header
+dt_header:
+_dt_header:
+        /* magic */
+        .byte 0xd0; .byte 0x0d; .byte 0xfe; .byte 0xed
+        /* totalsize */
+        .byte   ((_dt_blob_abs_end - _dt_blob_start) >> 24) & 0xff
+        .byte   ((_dt_blob_abs_end - _dt_blob_start) >> 16) & 0xff
+        .byte   ((_dt_blob_abs_end - _dt_blob_start) >> 8) & 0xff
+        .byte   (_dt_blob_abs_end - _dt_blob_start) & 0xff
+        /* off_dt_struct */
+        .byte   ((_dt_struct_start - _dt_blob_start) >> 24) & 0xff
+        .byte   ((_dt_struct_start - _dt_blob_start) >> 16) & 0xff
+        .byte   ((_dt_struct_start - _dt_blob_start) >> 8) & 0xff
+        .byte   (_dt_struct_start - _dt_blob_start) & 0xff
+        /* off_dt_strings */
+        .byte   ((_dt_strings_start - _dt_blob_start) >> 24) & 0xff
+        .byte   ((_dt_strings_start - _dt_blob_start) >> 16) & 0xff
+        .byte   ((_dt_strings_start - _dt_blob_start) >> 8) & 0xff
+        .byte   (_dt_strings_start - _dt_blob_start) & 0xff
+        /* off_mem_rsvmap */
+        .byte   ((_dt_reserve_map - _dt_blob_start) >> 24) & 0xff
+        .byte   ((_dt_reserve_map - _dt_blob_start) >> 16) & 0xff
+        .byte   ((_dt_reserve_map - _dt_blob_start) >> 8) & 0xff
+        .byte   (_dt_reserve_map - _dt_blob_start) & 0xff
+        /* version */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x11
+        /* last_comp_version */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x10
+        /* boot_cpuid_phys */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x00
+        /* size_dt_strings */
+        .byte   ((_dt_strings_end - _dt_strings_start) >> 24) & 0xff
+        .byte   ((_dt_strings_end - _dt_strings_start) >> 16) & 0xff
+        .byte   ((_dt_strings_end - _dt_strings_start) >> 8) & 0xff
+        .byte   (_dt_strings_end - _dt_strings_start) & 0xff
+        /* size_dt_struct */
+        .byte   ((_dt_struct_end - _dt_struct_start) >> 24) & 0xff
+        .byte   ((_dt_struct_end - _dt_struct_start) >> 16) & 0xff
+        .byte   ((_dt_struct_end - _dt_struct_start) >> 8) & 0xff
+        .byte   (_dt_struct_end - _dt_struct_start) & 0xff
+        .balign 8, 0
+        .globl  dt_reserve_map
+dt_reserve_map:
+_dt_reserve_map:
+/* Memory reserve map from source file */
+        .long   0, 0
+        .long   0, 0
+        .globl  dt_struct_start
+dt_struct_start:
+_dt_struct_start:
+        /* FDT_BEGIN_NODE */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x01
+        .string ""
+        .balign 4, 0
+        /* FDT_PROP */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x03
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x04
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x00
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x01
+        .balign 4, 0
+        /* FDT_PROP */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x03
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x04
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x0f
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x01
+        .balign 4, 0
+        /* FDT_BEGIN_NODE */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x01
+        .string "memory@C0000000"
+        .balign 4, 0
+        /* FDT_PROP */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x03
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x07
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x1b
+        .byte 0x6d; .byte 0x65; .byte 0x6d; .byte 0x6f
+        .byte   0x72
+        .byte   0x79
+        .byte   0x0
+        .balign 4, 0
+        /* FDT_PROP */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x03
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x08
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x27
+        .byte 0xc0; .byte 0x00; .byte 0x00; .byte 0x00
+        .byte 0x03; .byte 0xff; .byte 0xff; .byte 0xff
+        .balign 4, 0
+        /* FDT_END_NODE */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x02
+        /* FDT_END_NODE */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x02
+        /* FDT_END */
+        .byte 0x00; .byte 0x00; .byte 0x00; .byte 0x09
+        .globl  dt_struct_end
+dt_struct_end:
+_dt_struct_end:
+        .globl  dt_strings_start
+dt_strings_start:
+_dt_strings_start:
+        .string "#address-cells"
+        .string "#size-cells"
+        .string "device_type"
+        .string "reg"
+        .globl  dt_strings_end
+dt_strings_end:
+_dt_strings_end:
+        .globl  dt_blob_end
+dt_blob_end:
+_dt_blob_end:
+        .globl  dt_blob_abs_end
+dt_blob_abs_end:
+_dt_blob_abs_end:
diff --git a/sbi/ogsbi/main.c b/sbi/ogsbi/main.c
index 4f39655..5f7c858 100644
--- a/sbi/ogsbi/main.c
+++ b/sbi/ogsbi/main.c
@@ -26,10 +26,13 @@
  * Constants/Defines
  * --------------------------------------------------------------------------------------------- */
 
+extern int dt_blob_start;
+
 #define HART_ID 0//TODO instead of just assuming the hart id is 0, actually pass the contents of mhartid
-//#define KERNEL_ADDR 0xC0000000
-#define KERNEL_ADDR 0x02000000//TEMPORARY until memory-things are ready
-#define DTB_ADDR 0xDEADBEEF//TODO
+#define KERNEL_ADDR 0xC0000000
+//#define KERNEL_ADDR 0x02000000//TEMPORARY until memory-things are ready
+#define DTB_ADDR (unsigned int)&dt_blob_start
+//#define DTB_ADDR (unsigned int)0x00001000
 
 /* ------------------------------------------------------------------------------------------------
  * Function Implementations
