# CMakeLists.txt
# Copyright (C) 2023 John Jekel and Nick Chan
# See the LICENSE file at the root of the project for licensing info.
#
# CMake configuration file for irve tests
#
# NOTE: Unlike the testfiles directory this is NOT a seperate project
#
# Based on CMakeLists.txt from rv32esim
#

#Common options
cmake_minimum_required(VERSION 3.16.3)
include(CTest)

#TODO have a unit test list in a seperate file that is included here (and similarly for integration tests)
#TODO move the options related to unit test source files to a CMakeLists.txt in the unit directory (and similarly for integration tests)

set(UNIT_TESTER_SOURCES
    ${CMAKE_CURRENT_BINARY_DIR}/unit/unit_tester.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/unit/common.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/unit/cpu_state.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/unit/decode.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/unit/memory.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/unit/reg_file.cpp
)

set(INTEGRATION_TESTER_SOURCES
    ${CMAKE_CURRENT_BINARY_DIR}/integration/integration_tester.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/integration/basics.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/integration/init.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/integration/jzjcoresoftware.cpp
)

add_executable(unit_tester ${UNIT_TESTER_SOURCES})
target_include_directories(unit_tester PRIVATE ${PROJECT_SOURCE_DIR}/include/)#To get access to the public libirve headers
target_include_directories(unit_tester PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/unit/)#To get the generated unit_tests.h
target_include_directories(unit_tester PRIVATE ${PROJECT_SOURCE_DIR}/lib/ ${CMAKE_BINARY_DIR}/lib)#Unit tests need access to the internal libirve headers (including the autogenerated ones)
target_link_libraries(unit_tester PRIVATE libirve_object)#TODO or should we make this static or shared instead?
set(UNIT_TEST_LIST "")
macro(add_unit_test TEST_NAME)
    add_test(NAME unit_${TEST_NAME} COMMAND unit_tester ${TEST_NAME})
    set(UNIT_TEST_LIST "${UNIT_TEST_LIST} X(${TEST_NAME})")
    set_property(TEST unit_${TEST_NAME} PROPERTY REQUIRED_FILES "$<TARGET_FILE:unit_tester>")
endmacro()

add_executable(integration_tester ${INTEGRATION_TESTER_SOURCES})
target_include_directories(integration_tester PRIVATE ${PROJECT_SOURCE_DIR}/include/)#To get access to the public libirve headers
target_include_directories(integration_tester PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/integration/)#To get the generated integration_tests.h
#NO internal libirve headers for integration tests (they should only use the public API)
target_link_libraries(integration_tester PRIVATE libirve_object)#TODO or should we make this static or shared instead?
set(INTEGRATION_TEST_LIST "")
macro(add_integration_test TEST_NAME)
    add_test(NAME integration_${TEST_NAME} COMMAND integration_tester ${TEST_NAME})
    set(INTEGRATION_TEST_LIST "${INTEGRATION_TEST_LIST} X(${TEST_NAME})")
    set_property(TEST integration_${TEST_NAME} PROPERTY REQUIRED_FILES "$<TARGET_FILE:integration_tester>")
endmacro()

#########################################################################################
# Unit Test List
#########################################################################################

add_unit_test(word_t)
add_unit_test(integer_pow)
add_unit_test(cpu_state_t)
add_unit_test(decoded_inst_t)
add_unit_test(decoded_inst_t_invalid)
add_unit_test(reg_file_t)
add_unit_test(memory_t_valid)
add_unit_test(memory_t_invalid)
add_unit_test(pmemory_t_valid)
add_unit_test(pmemory_t_invalid)

#Put the list of unit tests in the unit tester file (THIS MUST BE LAST)
configure_file(unit/unit_tester.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/unit/unit_tester.cpp @ONLY)

#########################################################################################
# Integration Test List
#########################################################################################

#TODO the integration tester will test for assertions both in IRVE and RISC-V code
#It will have an internal list of tests to run which will include the path to
#the testfile, and a function to verify that the CPU state, memory, and output
#were as expected

add_integration_test(about)
#add_integration_test(emulator_t_init)
add_integration_test(emulator_t_sanity)
add_integration_test(logging)

#Put the list of integration tests in the header file (THIS MUST BE LAST)
configure_file(integration/integration_tester.cpp.in ${CMAKE_CURRENT_BINARY_DIR}/integration/integration_tester.cpp @ONLY)
